<UserControl
    x:Class="HgSoftware.InsertCreator.View.HistoryView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:HgSoftware.InsertCreator.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="70" />
        </Grid.RowDefinitions>

        <Grid.Resources>
            <behaviors:BindingProxy x:Key="proxy" Data="{Binding}" />
        </Grid.Resources>

        <ListBox
            x:Name="History"
            Margin="12,10,12,0"
            HorizontalContentAlignment="Stretch"
            dd:DragDrop.IsDragSource="True"
            dd:DragDrop.IsDropTarget="True"
            Background="{DynamicResource MaterialDesignPaper}"
            DockPanel.Dock="Top"
            ItemsSource="{Binding HistoryView, UpdateSourceTrigger=PropertyChanged}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Style="{StaticResource MaterialDesignCardsListBox}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding StationSelectedCommand}"
                                                   CommandParameter="{Binding ElementName=Grid, Path=CurrentItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ListBox.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding ListKeyDownCommand}" />
            </ListBox.InputBindings>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel
                        x:Name="ListBoxItem"
                        Width="{Binding Path=DataContext.ItemWith, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, UpdateSourceTrigger=PropertyChanged}"
                        Height="45"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">

                        <DockPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding Source={StaticResource proxy}, Path=Data.DeleteCommand}" Header="Löschen" />
                                <Separator />
                                <MenuItem Command="{Binding Source={StaticResource proxy}, Path=Data.SaveCommand}" Header="Speichern" />
                            </ContextMenu>
                        </DockPanel.ContextMenu>

                        <Grid VerticalAlignment="Center" DockPanel.Dock="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid.InputBindings>
                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Source={StaticResource proxy}, Path=Data.DoubleClick}" />
                            </Grid.InputBindings>

                            <TextBlock
                                Grid.Row="0"
                                IsEnabled="False"
                                Text="{Binding FirstLine, UpdateSourceTrigger=PropertyChanged}"
                                TextAlignment="Center" />
                            <TextBlock
                                Grid.Row="1"
                                IsEnabled="False"
                                Text="{Binding SecondLine, UpdateSourceTrigger=PropertyChanged}"
                                TextAlignment="Center" />
                        </Grid>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="ListBoxItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="Margin" Value="3" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="{StaticResource PrimaryHueMidBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{StaticResource MaterialDesignToolBarBackground}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="3" />
                        </Style>
                    </Style.Resources>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>

        <StackPanel
            Grid.Row="5"
            Margin="36,0,36,0"
            HorizontalAlignment="Left"
            Orientation="Horizontal">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Column="0"
                    Width="181"
                    Margin="20,10,20,10"
                    Command="{Binding ResetCommand}"
                    Content="Zurücksetzen " />
                <Button
                    Grid.Column="1"
                    Width="181"
                    Margin="20,10,20,10"
                    Command="{Binding CreateCommand}"
                    Content="Anzeigen "
                    IsEnabled="{Binding ValidFlag, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>